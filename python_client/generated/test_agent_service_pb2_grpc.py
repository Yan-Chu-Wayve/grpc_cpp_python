# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import test_agent_service_pb2 as test__agent__service__pb2


class TestAgentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IsWayveDriverMock = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/IsWayveDriverMock',
                request_serializer=test__agent__service__pb2.Empty.SerializeToString,
                response_deserializer=test__agent__service__pb2.Boolean.FromString,
                )
        self.GetWayveDriverVersion = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/GetWayveDriverVersion',
                request_serializer=test__agent__service__pb2.Empty.SerializeToString,
                response_deserializer=test__agent__service__pb2.WayveDriverVersionResponse.FromString,
                )
        self.GetIntegrationStatus = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/GetIntegrationStatus',
                request_serializer=test__agent__service__pb2.Empty.SerializeToString,
                response_deserializer=test__agent__service__pb2.IntegrationStatusResponse.FromString,
                )
        self.GetModelId = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/GetModelId',
                request_serializer=test__agent__service__pb2.Empty.SerializeToString,
                response_deserializer=test__agent__service__pb2.ModelIdResponse.FromString,
                )
        self.StreamTrace = channel.unary_stream(
                '/wayve.driver.tests.protobuf.TestAgentService/StreamTrace',
                request_serializer=test__agent__service__pb2.Empty.SerializeToString,
                response_deserializer=test__agent__service__pb2.TraceEvent.FromString,
                )
        self.GetServiceStatus = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/GetServiceStatus',
                request_serializer=test__agent__service__pb2.ServiceTypeRequest.SerializeToString,
                response_deserializer=test__agent__service__pb2.ServiceStatusResponse.FromString,
                )
        self.StartService = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/StartService',
                request_serializer=test__agent__service__pb2.ServiceTypeRequest.SerializeToString,
                response_deserializer=test__agent__service__pb2.Empty.FromString,
                )
        self.StopService = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/StopService',
                request_serializer=test__agent__service__pb2.ServiceTypeRequest.SerializeToString,
                response_deserializer=test__agent__service__pb2.Empty.FromString,
                )
        self.EngageWayveDriver = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/EngageWayveDriver',
                request_serializer=test__agent__service__pb2.Empty.SerializeToString,
                response_deserializer=test__agent__service__pb2.Empty.FromString,
                )
        self.DisengageWayveDriver = channel.unary_unary(
                '/wayve.driver.tests.protobuf.TestAgentService/DisengageWayveDriver',
                request_serializer=test__agent__service__pb2.Empty.SerializeToString,
                response_deserializer=test__agent__service__pb2.Empty.FromString,
                )


class TestAgentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def IsWayveDriverMock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWayveDriverVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIntegrationStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamTrace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopService(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EngageWayveDriver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisengageWayveDriver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TestAgentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IsWayveDriverMock': grpc.unary_unary_rpc_method_handler(
                    servicer.IsWayveDriverMock,
                    request_deserializer=test__agent__service__pb2.Empty.FromString,
                    response_serializer=test__agent__service__pb2.Boolean.SerializeToString,
            ),
            'GetWayveDriverVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWayveDriverVersion,
                    request_deserializer=test__agent__service__pb2.Empty.FromString,
                    response_serializer=test__agent__service__pb2.WayveDriverVersionResponse.SerializeToString,
            ),
            'GetIntegrationStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIntegrationStatus,
                    request_deserializer=test__agent__service__pb2.Empty.FromString,
                    response_serializer=test__agent__service__pb2.IntegrationStatusResponse.SerializeToString,
            ),
            'GetModelId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelId,
                    request_deserializer=test__agent__service__pb2.Empty.FromString,
                    response_serializer=test__agent__service__pb2.ModelIdResponse.SerializeToString,
            ),
            'StreamTrace': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamTrace,
                    request_deserializer=test__agent__service__pb2.Empty.FromString,
                    response_serializer=test__agent__service__pb2.TraceEvent.SerializeToString,
            ),
            'GetServiceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceStatus,
                    request_deserializer=test__agent__service__pb2.ServiceTypeRequest.FromString,
                    response_serializer=test__agent__service__pb2.ServiceStatusResponse.SerializeToString,
            ),
            'StartService': grpc.unary_unary_rpc_method_handler(
                    servicer.StartService,
                    request_deserializer=test__agent__service__pb2.ServiceTypeRequest.FromString,
                    response_serializer=test__agent__service__pb2.Empty.SerializeToString,
            ),
            'StopService': grpc.unary_unary_rpc_method_handler(
                    servicer.StopService,
                    request_deserializer=test__agent__service__pb2.ServiceTypeRequest.FromString,
                    response_serializer=test__agent__service__pb2.Empty.SerializeToString,
            ),
            'EngageWayveDriver': grpc.unary_unary_rpc_method_handler(
                    servicer.EngageWayveDriver,
                    request_deserializer=test__agent__service__pb2.Empty.FromString,
                    response_serializer=test__agent__service__pb2.Empty.SerializeToString,
            ),
            'DisengageWayveDriver': grpc.unary_unary_rpc_method_handler(
                    servicer.DisengageWayveDriver,
                    request_deserializer=test__agent__service__pb2.Empty.FromString,
                    response_serializer=test__agent__service__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wayve.driver.tests.protobuf.TestAgentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TestAgentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def IsWayveDriverMock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/IsWayveDriverMock',
            test__agent__service__pb2.Empty.SerializeToString,
            test__agent__service__pb2.Boolean.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWayveDriverVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/GetWayveDriverVersion',
            test__agent__service__pb2.Empty.SerializeToString,
            test__agent__service__pb2.WayveDriverVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIntegrationStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/GetIntegrationStatus',
            test__agent__service__pb2.Empty.SerializeToString,
            test__agent__service__pb2.IntegrationStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/GetModelId',
            test__agent__service__pb2.Empty.SerializeToString,
            test__agent__service__pb2.ModelIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamTrace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/wayve.driver.tests.protobuf.TestAgentService/StreamTrace',
            test__agent__service__pb2.Empty.SerializeToString,
            test__agent__service__pb2.TraceEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/GetServiceStatus',
            test__agent__service__pb2.ServiceTypeRequest.SerializeToString,
            test__agent__service__pb2.ServiceStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/StartService',
            test__agent__service__pb2.ServiceTypeRequest.SerializeToString,
            test__agent__service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/StopService',
            test__agent__service__pb2.ServiceTypeRequest.SerializeToString,
            test__agent__service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EngageWayveDriver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/EngageWayveDriver',
            test__agent__service__pb2.Empty.SerializeToString,
            test__agent__service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisengageWayveDriver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/wayve.driver.tests.protobuf.TestAgentService/DisengageWayveDriver',
            test__agent__service__pb2.Empty.SerializeToString,
            test__agent__service__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
