// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test_agent_service.proto
// Protobuf C++ Version: 5.29.3

#ifndef test_5fagent_5fservice_2eproto_2epb_2eh
#define test_5fagent_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_5fagent_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_5fagent_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_test_5fagent_5fservice_2eproto;
namespace wayve {
namespace driver {
namespace tests {
namespace protobuf {
class Boolean;
struct BooleanDefaultTypeInternal;
extern BooleanDefaultTypeInternal _Boolean_default_instance_;
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class IntegrationStatusResponse;
struct IntegrationStatusResponseDefaultTypeInternal;
extern IntegrationStatusResponseDefaultTypeInternal _IntegrationStatusResponse_default_instance_;
class ModelIdResponse;
struct ModelIdResponseDefaultTypeInternal;
extern ModelIdResponseDefaultTypeInternal _ModelIdResponse_default_instance_;
class ServiceStatusResponse;
struct ServiceStatusResponseDefaultTypeInternal;
extern ServiceStatusResponseDefaultTypeInternal _ServiceStatusResponse_default_instance_;
class ServiceTypeRequest;
struct ServiceTypeRequestDefaultTypeInternal;
extern ServiceTypeRequestDefaultTypeInternal _ServiceTypeRequest_default_instance_;
class TraceEvent;
struct TraceEventDefaultTypeInternal;
extern TraceEventDefaultTypeInternal _TraceEvent_default_instance_;
class WayveDriverVersionResponse;
struct WayveDriverVersionResponseDefaultTypeInternal;
extern WayveDriverVersionResponseDefaultTypeInternal _WayveDriverVersionResponse_default_instance_;
}  // namespace protobuf
}  // namespace tests
}  // namespace driver
}  // namespace wayve
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace wayve {
namespace driver {
namespace tests {
namespace protobuf {
enum ServiceState : int {
  SERVICE_STATE_UNKNOWN = 0,
  SERVICE_STATE_INITIALIZING = 1,
  SERVICE_STATE_RUNNING = 2,
  SERVICE_STATE_STOPPED = 3,
  SERVICE_STATE_ERROR = 4,
  ServiceState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ServiceState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ServiceState_IsValid(int value);
extern const uint32_t ServiceState_internal_data_[];
constexpr ServiceState ServiceState_MIN = static_cast<ServiceState>(0);
constexpr ServiceState ServiceState_MAX = static_cast<ServiceState>(4);
constexpr int ServiceState_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ServiceState_descriptor();
template <typename T>
const std::string& ServiceState_Name(T value) {
  static_assert(std::is_same<T, ServiceState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ServiceState_Name().");
  return ServiceState_Name(static_cast<ServiceState>(value));
}
template <>
inline const std::string& ServiceState_Name(ServiceState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ServiceState_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ServiceState_Parse(absl::string_view name, ServiceState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceState>(
      ServiceState_descriptor(), name, value);
}
enum IntegrationState : int {
  INTEGRATION_STATE_UNKNOWN = 0,
  INTEGRATION_STATE_INITIALIZING = 1,
  INTEGRATION_STATE_IDLE = 2,
  INTEGRATION_STATE_AV_LIMITED = 3,
  INTEGRATION_STATE_AV = 4,
  INTEGRATION_STATE_MANUAL = 5,
  INTEGRATION_STATE_REMOTE_CONTROL = 6,
  INTEGRATION_STATE_ERROR = 7,
  INTEGRATION_STATE_SHUTDOWN = 8,
  IntegrationState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  IntegrationState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool IntegrationState_IsValid(int value);
extern const uint32_t IntegrationState_internal_data_[];
constexpr IntegrationState IntegrationState_MIN = static_cast<IntegrationState>(0);
constexpr IntegrationState IntegrationState_MAX = static_cast<IntegrationState>(8);
constexpr int IntegrationState_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
IntegrationState_descriptor();
template <typename T>
const std::string& IntegrationState_Name(T value) {
  static_assert(std::is_same<T, IntegrationState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to IntegrationState_Name().");
  return IntegrationState_Name(static_cast<IntegrationState>(value));
}
template <>
inline const std::string& IntegrationState_Name(IntegrationState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<IntegrationState_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool IntegrationState_Parse(absl::string_view name, IntegrationState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IntegrationState>(
      IntegrationState_descriptor(), name, value);
}
enum ServiceType : int {
  SERVICE_TYPE_UNKNOWN = 0,
  SERVICE_TYPE_TRAJECTORY = 1,
  SERVICE_TYPE_NAVIGATION = 2,
  SERVICE_TYPE_INFERENCE = 3,
  ServiceType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ServiceType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ServiceType_IsValid(int value);
extern const uint32_t ServiceType_internal_data_[];
constexpr ServiceType ServiceType_MIN = static_cast<ServiceType>(0);
constexpr ServiceType ServiceType_MAX = static_cast<ServiceType>(3);
constexpr int ServiceType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
ServiceType_descriptor();
template <typename T>
const std::string& ServiceType_Name(T value) {
  static_assert(std::is_same<T, ServiceType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ServiceType_Name().");
  return ServiceType_Name(static_cast<ServiceType>(value));
}
template <>
inline const std::string& ServiceType_Name(ServiceType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ServiceType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool ServiceType_Parse(absl::string_view name, ServiceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceType>(
      ServiceType_descriptor(), name, value);
}
enum TraceGroup : int {
  TRACE_GROUP_UNKNOWN = 0,
  TRACE_GROUP_TRAJECTORY = 1,
  TRACE_GROUP_NAVIGATION = 2,
  TRACE_GROUP_INFERENCE = 4,
  TRACE_GROUP_SAFETY_CRITICAL = 8,
  TraceGroup_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TraceGroup_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TraceGroup_IsValid(int value);
extern const uint32_t TraceGroup_internal_data_[];
constexpr TraceGroup TraceGroup_MIN = static_cast<TraceGroup>(0);
constexpr TraceGroup TraceGroup_MAX = static_cast<TraceGroup>(8);
constexpr int TraceGroup_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor*
TraceGroup_descriptor();
template <typename T>
const std::string& TraceGroup_Name(T value) {
  static_assert(std::is_same<T, TraceGroup>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TraceGroup_Name().");
  return TraceGroup_Name(static_cast<TraceGroup>(value));
}
template <>
inline const std::string& TraceGroup_Name(TraceGroup value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TraceGroup_descriptor,
                                                 0, 8>(
      static_cast<int>(value));
}
inline bool TraceGroup_Parse(absl::string_view name, TraceGroup* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TraceGroup>(
      TraceGroup_descriptor(), name, value);
}
enum TraceSeverity : int {
  TRACE_SEVERITY_UNKNOWN = 0,
  TRACE_SEVERITY_DEBUG = 1,
  TRACE_SEVERITY_INFO = 2,
  TRACE_SEVERITY_ERROR = 3,
  TraceSeverity_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TraceSeverity_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TraceSeverity_IsValid(int value);
extern const uint32_t TraceSeverity_internal_data_[];
constexpr TraceSeverity TraceSeverity_MIN = static_cast<TraceSeverity>(0);
constexpr TraceSeverity TraceSeverity_MAX = static_cast<TraceSeverity>(3);
constexpr int TraceSeverity_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
TraceSeverity_descriptor();
template <typename T>
const std::string& TraceSeverity_Name(T value) {
  static_assert(std::is_same<T, TraceSeverity>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TraceSeverity_Name().");
  return TraceSeverity_Name(static_cast<TraceSeverity>(value));
}
template <>
inline const std::string& TraceSeverity_Name(TraceSeverity value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TraceSeverity_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool TraceSeverity_Parse(absl::string_view name, TraceSeverity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TraceSeverity>(
      TraceSeverity_descriptor(), name, value);
}
enum TraceEventType : int {
  TRACE_EVENT_TYPE_UNKNOWN = 0,
  TRACE_EVENT_TYPE_FUNCTION_CALL = 1,
  TRACE_EVENT_TYPE_LOG_MESSAGE = 2,
  TraceEventType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  TraceEventType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool TraceEventType_IsValid(int value);
extern const uint32_t TraceEventType_internal_data_[];
constexpr TraceEventType TraceEventType_MIN = static_cast<TraceEventType>(0);
constexpr TraceEventType TraceEventType_MAX = static_cast<TraceEventType>(2);
constexpr int TraceEventType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
TraceEventType_descriptor();
template <typename T>
const std::string& TraceEventType_Name(T value) {
  static_assert(std::is_same<T, TraceEventType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to TraceEventType_Name().");
  return TraceEventType_Name(static_cast<TraceEventType>(value));
}
template <>
inline const std::string& TraceEventType_Name(TraceEventType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<TraceEventType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool TraceEventType_Parse(absl::string_view name, TraceEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TraceEventType>(
      TraceEventType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class WayveDriverVersionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.WayveDriverVersionResponse) */ {
 public:
  inline WayveDriverVersionResponse() : WayveDriverVersionResponse(nullptr) {}
  ~WayveDriverVersionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(WayveDriverVersionResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(WayveDriverVersionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WayveDriverVersionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline WayveDriverVersionResponse(const WayveDriverVersionResponse& from) : WayveDriverVersionResponse(nullptr, from) {}
  inline WayveDriverVersionResponse(WayveDriverVersionResponse&& from) noexcept
      : WayveDriverVersionResponse(nullptr, std::move(from)) {}
  inline WayveDriverVersionResponse& operator=(const WayveDriverVersionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WayveDriverVersionResponse& operator=(WayveDriverVersionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WayveDriverVersionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WayveDriverVersionResponse* internal_default_instance() {
    return reinterpret_cast<const WayveDriverVersionResponse*>(
        &_WayveDriverVersionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(WayveDriverVersionResponse& a, WayveDriverVersionResponse& b) { a.Swap(&b); }
  inline void Swap(WayveDriverVersionResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WayveDriverVersionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WayveDriverVersionResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<WayveDriverVersionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WayveDriverVersionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WayveDriverVersionResponse& from) { WayveDriverVersionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(WayveDriverVersionResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.WayveDriverVersionResponse"; }

 protected:
  explicit WayveDriverVersionResponse(::google::protobuf::Arena* arena);
  WayveDriverVersionResponse(::google::protobuf::Arena* arena, const WayveDriverVersionResponse& from);
  WayveDriverVersionResponse(::google::protobuf::Arena* arena, WayveDriverVersionResponse&& from) noexcept
      : WayveDriverVersionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVersionFieldNumber = 1,
  };
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.WayveDriverVersionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      70, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WayveDriverVersionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};
// -------------------------------------------------------------------

class TraceEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.TraceEvent) */ {
 public:
  inline TraceEvent() : TraceEvent(nullptr) {}
  ~TraceEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TraceEvent* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TraceEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TraceEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline TraceEvent(const TraceEvent& from) : TraceEvent(nullptr, from) {}
  inline TraceEvent(TraceEvent&& from) noexcept
      : TraceEvent(nullptr, std::move(from)) {}
  inline TraceEvent& operator=(const TraceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline TraceEvent& operator=(TraceEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TraceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const TraceEvent* internal_default_instance() {
    return reinterpret_cast<const TraceEvent*>(
        &_TraceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(TraceEvent& a, TraceEvent& b) { a.Swap(&b); }
  inline void Swap(TraceEvent* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TraceEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TraceEvent* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TraceEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TraceEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TraceEvent& from) { TraceEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TraceEvent* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.TraceEvent"; }

 protected:
  explicit TraceEvent(::google::protobuf::Arena* arena);
  TraceEvent(::google::protobuf::Arena* arena, const TraceEvent& from);
  TraceEvent(::google::protobuf::Arena* arena, TraceEvent&& from) noexcept
      : TraceEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 5,
    kTimestampNsFieldNumber = 1,
    kGroupsMaskFieldNumber = 2,
    kSeverityFieldNumber = 3,
    kEventTypeFieldNumber = 4,
  };
  // bytes message = 5;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // uint64 timestamp_ns = 1;
  void clear_timestamp_ns() ;
  ::uint64_t timestamp_ns() const;
  void set_timestamp_ns(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp_ns() const;
  void _internal_set_timestamp_ns(::uint64_t value);

  public:
  // uint32 groups_mask = 2;
  void clear_groups_mask() ;
  ::uint32_t groups_mask() const;
  void set_groups_mask(::uint32_t value);

  private:
  ::uint32_t _internal_groups_mask() const;
  void _internal_set_groups_mask(::uint32_t value);

  public:
  // .wayve.driver.tests.protobuf.TraceSeverity severity = 3;
  void clear_severity() ;
  ::wayve::driver::tests::protobuf::TraceSeverity severity() const;
  void set_severity(::wayve::driver::tests::protobuf::TraceSeverity value);

  private:
  ::wayve::driver::tests::protobuf::TraceSeverity _internal_severity() const;
  void _internal_set_severity(::wayve::driver::tests::protobuf::TraceSeverity value);

  public:
  // .wayve.driver.tests.protobuf.TraceEventType event_type = 4;
  void clear_event_type() ;
  ::wayve::driver::tests::protobuf::TraceEventType event_type() const;
  void set_event_type(::wayve::driver::tests::protobuf::TraceEventType value);

  private:
  ::wayve::driver::tests::protobuf::TraceEventType _internal_event_type() const;
  void _internal_set_event_type(::wayve::driver::tests::protobuf::TraceEventType value);

  public:
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.TraceEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TraceEvent& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::uint64_t timestamp_ns_;
    ::uint32_t groups_mask_;
    int severity_;
    int event_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ServiceTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.ServiceTypeRequest) */ {
 public:
  inline ServiceTypeRequest() : ServiceTypeRequest(nullptr) {}
  ~ServiceTypeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServiceTypeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServiceTypeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceTypeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ServiceTypeRequest(const ServiceTypeRequest& from) : ServiceTypeRequest(nullptr, from) {}
  inline ServiceTypeRequest(ServiceTypeRequest&& from) noexcept
      : ServiceTypeRequest(nullptr, std::move(from)) {}
  inline ServiceTypeRequest& operator=(const ServiceTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceTypeRequest& operator=(ServiceTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceTypeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServiceTypeRequest* internal_default_instance() {
    return reinterpret_cast<const ServiceTypeRequest*>(
        &_ServiceTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ServiceTypeRequest& a, ServiceTypeRequest& b) { a.Swap(&b); }
  inline void Swap(ServiceTypeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceTypeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceTypeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServiceTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServiceTypeRequest& from) { ServiceTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServiceTypeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.ServiceTypeRequest"; }

 protected:
  explicit ServiceTypeRequest(::google::protobuf::Arena* arena);
  ServiceTypeRequest(::google::protobuf::Arena* arena, const ServiceTypeRequest& from);
  ServiceTypeRequest(::google::protobuf::Arena* arena, ServiceTypeRequest&& from) noexcept
      : ServiceTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServiceTypeFieldNumber = 1,
  };
  // .wayve.driver.tests.protobuf.ServiceType service_type = 1;
  void clear_service_type() ;
  ::wayve::driver::tests::protobuf::ServiceType service_type() const;
  void set_service_type(::wayve::driver::tests::protobuf::ServiceType value);

  private:
  ::wayve::driver::tests::protobuf::ServiceType _internal_service_type() const;
  void _internal_set_service_type(::wayve::driver::tests::protobuf::ServiceType value);

  public:
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.ServiceTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ServiceTypeRequest& from_msg);
    int service_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ServiceStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.ServiceStatusResponse) */ {
 public:
  inline ServiceStatusResponse() : ServiceStatusResponse(nullptr) {}
  ~ServiceStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServiceStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServiceStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServiceStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ServiceStatusResponse(const ServiceStatusResponse& from) : ServiceStatusResponse(nullptr, from) {}
  inline ServiceStatusResponse(ServiceStatusResponse&& from) noexcept
      : ServiceStatusResponse(nullptr, std::move(from)) {}
  inline ServiceStatusResponse& operator=(const ServiceStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceStatusResponse& operator=(ServiceStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServiceStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServiceStatusResponse* internal_default_instance() {
    return reinterpret_cast<const ServiceStatusResponse*>(
        &_ServiceStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ServiceStatusResponse& a, ServiceStatusResponse& b) { a.Swap(&b); }
  inline void Swap(ServiceStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServiceStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServiceStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServiceStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServiceStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServiceStatusResponse& from) { ServiceStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServiceStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.ServiceStatusResponse"; }

 protected:
  explicit ServiceStatusResponse(::google::protobuf::Arena* arena);
  ServiceStatusResponse(::google::protobuf::Arena* arena, const ServiceStatusResponse& from);
  ServiceStatusResponse(::google::protobuf::Arena* arena, ServiceStatusResponse&& from) noexcept
      : ServiceStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStateFieldNumber = 1,
  };
  // .wayve.driver.tests.protobuf.ServiceState state = 1;
  void clear_state() ;
  ::wayve::driver::tests::protobuf::ServiceState state() const;
  void set_state(::wayve::driver::tests::protobuf::ServiceState value);

  private:
  ::wayve::driver::tests::protobuf::ServiceState _internal_state() const;
  void _internal_set_state(::wayve::driver::tests::protobuf::ServiceState value);

  public:
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.ServiceStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ServiceStatusResponse& from_msg);
    int state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ModelIdResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.ModelIdResponse) */ {
 public:
  inline ModelIdResponse() : ModelIdResponse(nullptr) {}
  ~ModelIdResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModelIdResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModelIdResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModelIdResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModelIdResponse(const ModelIdResponse& from) : ModelIdResponse(nullptr, from) {}
  inline ModelIdResponse(ModelIdResponse&& from) noexcept
      : ModelIdResponse(nullptr, std::move(from)) {}
  inline ModelIdResponse& operator=(const ModelIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelIdResponse& operator=(ModelIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModelIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModelIdResponse* internal_default_instance() {
    return reinterpret_cast<const ModelIdResponse*>(
        &_ModelIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ModelIdResponse& a, ModelIdResponse& b) { a.Swap(&b); }
  inline void Swap(ModelIdResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModelIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModelIdResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModelIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModelIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModelIdResponse& from) { ModelIdResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModelIdResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.ModelIdResponse"; }

 protected:
  explicit ModelIdResponse(::google::protobuf::Arena* arena);
  ModelIdResponse(::google::protobuf::Arena* arena, const ModelIdResponse& from);
  ModelIdResponse(::google::protobuf::Arena* arena, ModelIdResponse&& from) noexcept
      : ModelIdResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModelIdFieldNumber = 1,
  };
  // string model_id = 1;
  void clear_model_id() ;
  const std::string& model_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_model_id(Arg_&& arg, Args_... args);
  std::string* mutable_model_id();
  PROTOBUF_NODISCARD std::string* release_model_id();
  void set_allocated_model_id(std::string* value);

  private:
  const std::string& _internal_model_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_id(
      const std::string& value);
  std::string* _internal_mutable_model_id();

  public:
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.ModelIdResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModelIdResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr model_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};
// -------------------------------------------------------------------

class IntegrationStatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.IntegrationStatusResponse) */ {
 public:
  inline IntegrationStatusResponse() : IntegrationStatusResponse(nullptr) {}
  ~IntegrationStatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IntegrationStatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IntegrationStatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IntegrationStatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline IntegrationStatusResponse(const IntegrationStatusResponse& from) : IntegrationStatusResponse(nullptr, from) {}
  inline IntegrationStatusResponse(IntegrationStatusResponse&& from) noexcept
      : IntegrationStatusResponse(nullptr, std::move(from)) {}
  inline IntegrationStatusResponse& operator=(const IntegrationStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntegrationStatusResponse& operator=(IntegrationStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IntegrationStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const IntegrationStatusResponse* internal_default_instance() {
    return reinterpret_cast<const IntegrationStatusResponse*>(
        &_IntegrationStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(IntegrationStatusResponse& a, IntegrationStatusResponse& b) { a.Swap(&b); }
  inline void Swap(IntegrationStatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IntegrationStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IntegrationStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IntegrationStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IntegrationStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IntegrationStatusResponse& from) { IntegrationStatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IntegrationStatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.IntegrationStatusResponse"; }

 protected:
  explicit IntegrationStatusResponse(::google::protobuf::Arena* arena);
  IntegrationStatusResponse(::google::protobuf::Arena* arena, const IntegrationStatusResponse& from);
  IntegrationStatusResponse(::google::protobuf::Arena* arena, IntegrationStatusResponse&& from) noexcept
      : IntegrationStatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStateFieldNumber = 1,
  };
  // .wayve.driver.tests.protobuf.IntegrationState state = 1;
  void clear_state() ;
  ::wayve::driver::tests::protobuf::IntegrationState state() const;
  void set_state(::wayve::driver::tests::protobuf::IntegrationState value);

  private:
  ::wayve::driver::tests::protobuf::IntegrationState _internal_state() const;
  void _internal_set_state(::wayve::driver::tests::protobuf::IntegrationState value);

  public:
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.IntegrationStatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IntegrationStatusResponse& from_msg);
    int state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Empty final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Empty* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Empty));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(
      ::google::protobuf::internal::ConstantInitialized);

  inline Empty(const Empty& from) : Empty(nullptr, from) {}
  inline Empty(Empty&& from) noexcept
      : Empty(nullptr, std::move(from)) {}
  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
        &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Empty& a, Empty& b) { a.Swap(&b); }
  inline void Swap(Empty* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.Empty"; }

 protected:
  explicit Empty(::google::protobuf::Arena* arena);
  Empty(::google::protobuf::Arena* arena, const Empty& from);
  Empty(::google::protobuf::Arena* arena, Empty&& from) noexcept
      : Empty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.Empty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Empty& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Boolean final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:wayve.driver.tests.protobuf.Boolean) */ {
 public:
  inline Boolean() : Boolean(nullptr) {}
  ~Boolean() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Boolean* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Boolean));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Boolean(
      ::google::protobuf::internal::ConstantInitialized);

  inline Boolean(const Boolean& from) : Boolean(nullptr, from) {}
  inline Boolean(Boolean&& from) noexcept
      : Boolean(nullptr, std::move(from)) {}
  inline Boolean& operator=(const Boolean& from) {
    CopyFrom(from);
    return *this;
  }
  inline Boolean& operator=(Boolean&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Boolean& default_instance() {
    return *internal_default_instance();
  }
  static inline const Boolean* internal_default_instance() {
    return reinterpret_cast<const Boolean*>(
        &_Boolean_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Boolean& a, Boolean& b) { a.Swap(&b); }
  inline void Swap(Boolean* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Boolean* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Boolean* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Boolean>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Boolean& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Boolean& from) { Boolean::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Boolean* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "wayve.driver.tests.protobuf.Boolean"; }

 protected:
  explicit Boolean(::google::protobuf::Arena* arena);
  Boolean(::google::protobuf::Arena* arena, const Boolean& from);
  Boolean(::google::protobuf::Arena* arena, Boolean&& from) noexcept
      : Boolean(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // bool value = 1;
  void clear_value() ;
  bool value() const;
  void set_value(bool value);

  private:
  bool _internal_value() const;
  void _internal_set_value(bool value);

  public:
  // @@protoc_insertion_point(class_scope:wayve.driver.tests.protobuf.Boolean)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Boolean& from_msg);
    bool value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_5fagent_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// Boolean

// bool value = 1;
inline void Boolean::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = false;
}
inline bool Boolean::value() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.Boolean.value)
  return _internal_value();
}
inline void Boolean::set_value(bool value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.Boolean.value)
}
inline bool Boolean::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void Boolean::_internal_set_value(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// ServiceTypeRequest

// .wayve.driver.tests.protobuf.ServiceType service_type = 1;
inline void ServiceTypeRequest::clear_service_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_type_ = 0;
}
inline ::wayve::driver::tests::protobuf::ServiceType ServiceTypeRequest::service_type() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.ServiceTypeRequest.service_type)
  return _internal_service_type();
}
inline void ServiceTypeRequest::set_service_type(::wayve::driver::tests::protobuf::ServiceType value) {
  _internal_set_service_type(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.ServiceTypeRequest.service_type)
}
inline ::wayve::driver::tests::protobuf::ServiceType ServiceTypeRequest::_internal_service_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wayve::driver::tests::protobuf::ServiceType>(_impl_.service_type_);
}
inline void ServiceTypeRequest::_internal_set_service_type(::wayve::driver::tests::protobuf::ServiceType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.service_type_ = value;
}

// -------------------------------------------------------------------

// ServiceStatusResponse

// .wayve.driver.tests.protobuf.ServiceState state = 1;
inline void ServiceStatusResponse::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::wayve::driver::tests::protobuf::ServiceState ServiceStatusResponse::state() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.ServiceStatusResponse.state)
  return _internal_state();
}
inline void ServiceStatusResponse::set_state(::wayve::driver::tests::protobuf::ServiceState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.ServiceStatusResponse.state)
}
inline ::wayve::driver::tests::protobuf::ServiceState ServiceStatusResponse::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wayve::driver::tests::protobuf::ServiceState>(_impl_.state_);
}
inline void ServiceStatusResponse::_internal_set_state(::wayve::driver::tests::protobuf::ServiceState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// -------------------------------------------------------------------

// IntegrationStatusResponse

// .wayve.driver.tests.protobuf.IntegrationState state = 1;
inline void IntegrationStatusResponse::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::wayve::driver::tests::protobuf::IntegrationState IntegrationStatusResponse::state() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.IntegrationStatusResponse.state)
  return _internal_state();
}
inline void IntegrationStatusResponse::set_state(::wayve::driver::tests::protobuf::IntegrationState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.IntegrationStatusResponse.state)
}
inline ::wayve::driver::tests::protobuf::IntegrationState IntegrationStatusResponse::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wayve::driver::tests::protobuf::IntegrationState>(_impl_.state_);
}
inline void IntegrationStatusResponse::_internal_set_state(::wayve::driver::tests::protobuf::IntegrationState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// -------------------------------------------------------------------

// WayveDriverVersionResponse

// string version = 1;
inline void WayveDriverVersionResponse::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& WayveDriverVersionResponse::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.WayveDriverVersionResponse.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WayveDriverVersionResponse::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.WayveDriverVersionResponse.version)
}
inline std::string* WayveDriverVersionResponse::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:wayve.driver.tests.protobuf.WayveDriverVersionResponse.version)
  return _s;
}
inline const std::string& WayveDriverVersionResponse::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void WayveDriverVersionResponse::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* WayveDriverVersionResponse::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* WayveDriverVersionResponse::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wayve.driver.tests.protobuf.WayveDriverVersionResponse.version)
  return _impl_.version_.Release();
}
inline void WayveDriverVersionResponse::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wayve.driver.tests.protobuf.WayveDriverVersionResponse.version)
}

// -------------------------------------------------------------------

// ModelIdResponse

// string model_id = 1;
inline void ModelIdResponse::clear_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.ClearToEmpty();
}
inline const std::string& ModelIdResponse::model_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.ModelIdResponse.model_id)
  return _internal_model_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModelIdResponse::set_model_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.ModelIdResponse.model_id)
}
inline std::string* ModelIdResponse::mutable_model_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_model_id();
  // @@protoc_insertion_point(field_mutable:wayve.driver.tests.protobuf.ModelIdResponse.model_id)
  return _s;
}
inline const std::string& ModelIdResponse::_internal_model_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_id_.Get();
}
inline void ModelIdResponse::_internal_set_model_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.Set(value, GetArena());
}
inline std::string* ModelIdResponse::_internal_mutable_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.model_id_.Mutable( GetArena());
}
inline std::string* ModelIdResponse::release_model_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wayve.driver.tests.protobuf.ModelIdResponse.model_id)
  return _impl_.model_id_.Release();
}
inline void ModelIdResponse::set_allocated_model_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_id_.IsDefault()) {
    _impl_.model_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wayve.driver.tests.protobuf.ModelIdResponse.model_id)
}

// -------------------------------------------------------------------

// TraceEvent

// uint64 timestamp_ns = 1;
inline void TraceEvent::clear_timestamp_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ns_ = ::uint64_t{0u};
}
inline ::uint64_t TraceEvent::timestamp_ns() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.TraceEvent.timestamp_ns)
  return _internal_timestamp_ns();
}
inline void TraceEvent::set_timestamp_ns(::uint64_t value) {
  _internal_set_timestamp_ns(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.TraceEvent.timestamp_ns)
}
inline ::uint64_t TraceEvent::_internal_timestamp_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_ns_;
}
inline void TraceEvent::_internal_set_timestamp_ns(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ns_ = value;
}

// uint32 groups_mask = 2;
inline void TraceEvent::clear_groups_mask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_mask_ = 0u;
}
inline ::uint32_t TraceEvent::groups_mask() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.TraceEvent.groups_mask)
  return _internal_groups_mask();
}
inline void TraceEvent::set_groups_mask(::uint32_t value) {
  _internal_set_groups_mask(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.TraceEvent.groups_mask)
}
inline ::uint32_t TraceEvent::_internal_groups_mask() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.groups_mask_;
}
inline void TraceEvent::_internal_set_groups_mask(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.groups_mask_ = value;
}

// .wayve.driver.tests.protobuf.TraceSeverity severity = 3;
inline void TraceEvent::clear_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = 0;
}
inline ::wayve::driver::tests::protobuf::TraceSeverity TraceEvent::severity() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.TraceEvent.severity)
  return _internal_severity();
}
inline void TraceEvent::set_severity(::wayve::driver::tests::protobuf::TraceSeverity value) {
  _internal_set_severity(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.TraceEvent.severity)
}
inline ::wayve::driver::tests::protobuf::TraceSeverity TraceEvent::_internal_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wayve::driver::tests::protobuf::TraceSeverity>(_impl_.severity_);
}
inline void TraceEvent::_internal_set_severity(::wayve::driver::tests::protobuf::TraceSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = value;
}

// .wayve.driver.tests.protobuf.TraceEventType event_type = 4;
inline void TraceEvent::clear_event_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_type_ = 0;
}
inline ::wayve::driver::tests::protobuf::TraceEventType TraceEvent::event_type() const {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.TraceEvent.event_type)
  return _internal_event_type();
}
inline void TraceEvent::set_event_type(::wayve::driver::tests::protobuf::TraceEventType value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.TraceEvent.event_type)
}
inline ::wayve::driver::tests::protobuf::TraceEventType TraceEvent::_internal_event_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::wayve::driver::tests::protobuf::TraceEventType>(_impl_.event_type_);
}
inline void TraceEvent::_internal_set_event_type(::wayve::driver::tests::protobuf::TraceEventType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_type_ = value;
}

// bytes message = 5;
inline void TraceEvent::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& TraceEvent::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:wayve.driver.tests.protobuf.TraceEvent.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TraceEvent::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:wayve.driver.tests.protobuf.TraceEvent.message)
}
inline std::string* TraceEvent::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:wayve.driver.tests.protobuf.TraceEvent.message)
  return _s;
}
inline const std::string& TraceEvent::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void TraceEvent::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* TraceEvent::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* TraceEvent::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:wayve.driver.tests.protobuf.TraceEvent.message)
  return _impl_.message_.Release();
}
inline void TraceEvent::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:wayve.driver.tests.protobuf.TraceEvent.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace tests
}  // namespace driver
}  // namespace wayve


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::wayve::driver::tests::protobuf::ServiceState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wayve::driver::tests::protobuf::ServiceState>() {
  return ::wayve::driver::tests::protobuf::ServiceState_descriptor();
}
template <>
struct is_proto_enum<::wayve::driver::tests::protobuf::IntegrationState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wayve::driver::tests::protobuf::IntegrationState>() {
  return ::wayve::driver::tests::protobuf::IntegrationState_descriptor();
}
template <>
struct is_proto_enum<::wayve::driver::tests::protobuf::ServiceType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wayve::driver::tests::protobuf::ServiceType>() {
  return ::wayve::driver::tests::protobuf::ServiceType_descriptor();
}
template <>
struct is_proto_enum<::wayve::driver::tests::protobuf::TraceGroup> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wayve::driver::tests::protobuf::TraceGroup>() {
  return ::wayve::driver::tests::protobuf::TraceGroup_descriptor();
}
template <>
struct is_proto_enum<::wayve::driver::tests::protobuf::TraceSeverity> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wayve::driver::tests::protobuf::TraceSeverity>() {
  return ::wayve::driver::tests::protobuf::TraceSeverity_descriptor();
}
template <>
struct is_proto_enum<::wayve::driver::tests::protobuf::TraceEventType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::wayve::driver::tests::protobuf::TraceEventType>() {
  return ::wayve::driver::tests::protobuf::TraceEventType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // test_5fagent_5fservice_2eproto_2epb_2eh
